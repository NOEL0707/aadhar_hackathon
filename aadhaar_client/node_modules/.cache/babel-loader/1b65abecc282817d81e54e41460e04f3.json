{"ast":null,"code":"var _jsxFileName = \"/home/noel/Desktop/aadhar_app/login-page/src/components/TeamUp-form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import Select from \"react-select\";\n\nimport { useHistory } from \"react-router\"; // import Multiselect from 'multiselect-react-dropdown';\n\nimport \"../styles/Teamupform.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Teamup_form = () => {\n  _s();\n\n  const [Title, setTitle] = useState(\"\");\n  const [skill, setSkill] = useState(\"\");\n  const [Tag, settag] = useState([]);\n  const [btn_disable, setbtn_disable] = useState(false);\n  const [Description, setDescription] = useState(\"\");\n  let history = useHistory();\n\n  const HandleInputs = async event => {\n    setbtn_disable(true);\n    event.preventDefault();\n    let url = `http://localhost:4444/teamup/submit`;\n\n    if (Tag.length === 0) {\n      alert(\"Tag field should not be empty\");\n      setbtn_disable(false);\n      console.log(btn_disable);\n    } else {\n      var tag_list = [];\n\n      for (let i = 0; i < Tag.length; i++) {\n        tag_list.push(Tag[i].value);\n      } //   Tag.map((tag) => {\n      //     tag_list.push(tag.value);\n      //   });\n\n\n      const datatobesent = {\n        title: Title,\n        skill: skill,\n        tag: tag_list,\n        description: Description\n      };\n      console.log(datatobesent);\n      const res = await axios.post(url, datatobesent, {\n        withCredentials: true\n      });\n      console.log(res.status);\n\n      if (res.status === 200) {\n        // return <Redirect to=\"/myposts\"/>\n        history.push(\"/myposts\");\n      } else {\n        setbtn_disable(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (Title.length > 50) {\n      alert(\"Title cannot be more than 50 characters\");\n      setTitle(Title.slice(0, 50));\n    }\n\n    if (skill.length > 50) {\n      alert(\"Skill cannot be more than 50 characters\");\n      setSkill(skill.slice(0, 50));\n    }\n\n    if (Description.length > 300) {\n      alert(\"Description cannot be more than 300 characters\");\n      setDescription(Description.slice(0, 300));\n    }\n  }, [Title, skill, Description]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      onSubmit: HandleInputs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"TeamUp Post Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forminput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Requirement\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          required: true,\n          id: \"name\",\n          placeholder: \"Looking for WEB developer\",\n          value: Title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forminput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Skill\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          required: true,\n          id: \"Skill\",\n          placeholder: \"Reactjs,kotlin\",\n          value: skill,\n          onChange: e => setSkill(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forminput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"50\",\n          placeholder: \"Enter teamup Description\",\n          value: Description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btndiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"submit\",\n          disabled: btn_disable,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Teamup_form, \"x4Pfgf2dDG6cimzirgv+5abT1jM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Teamup_form;\nexport default Teamup_form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teamup_form\");","map":{"version":3,"sources":["/home/noel/Desktop/aadhar_app/login-page/src/components/TeamUp-form.jsx"],"names":["React","useState","useEffect","useHistory","axios","Teamup_form","Title","setTitle","skill","setSkill","Tag","settag","btn_disable","setbtn_disable","Description","setDescription","history","HandleInputs","event","preventDefault","url","length","alert","console","log","tag_list","i","push","value","datatobesent","title","tag","description","res","post","withCredentials","status","slice","color","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import Select from \"react-select\";\nimport { useHistory } from \"react-router\";\n// import Multiselect from 'multiselect-react-dropdown';\nimport \"../styles/Teamupform.css\";\nimport axios from \"axios\";\n\nconst Teamup_form = () => {\n  const [Title, setTitle] = useState(\"\");\n  const [skill, setSkill] = useState(\"\");\n  const [Tag, settag] = useState([]);\n  const [btn_disable, setbtn_disable] = useState(false);\n  const [Description, setDescription] = useState(\"\");\n  let history = useHistory();\n\n  const HandleInputs = async (event) => {\n    setbtn_disable(true);\n    event.preventDefault();\n    let url = `http://localhost:4444/teamup/submit`;\n    if (Tag.length === 0) {\n      alert(\"Tag field should not be empty\");\n      setbtn_disable(false);\n      console.log(btn_disable);\n    } else {\n      var tag_list = [];\n\n      for (let i = 0; i < Tag.length; i++) {\n        tag_list.push(Tag[i].value);\n      }\n\n      //   Tag.map((tag) => {\n      //     tag_list.push(tag.value);\n      //   });\n      const datatobesent = {\n        title: Title,\n        skill: skill,\n        tag: tag_list,\n        description: Description,\n      };\n      console.log(datatobesent);\n      const res = await axios.post(url, datatobesent, {\n        withCredentials: true,\n      });\n      console.log(res.status);\n      if (res.status === 200) {\n        // return <Redirect to=\"/myposts\"/>\n        history.push(\"/myposts\");\n      } else {\n        setbtn_disable(false);\n      }\n    }\n  };\n  useEffect(() => {\n    if (Title.length > 50) {\n      alert(\"Title cannot be more than 50 characters\");\n      setTitle(Title.slice(0, 50));\n    }\n    if (skill.length > 50) {\n      alert(\"Skill cannot be more than 50 characters\");\n      setSkill(skill.slice(0, 50));\n    }\n    if (Description.length > 300) {\n      alert(\"Description cannot be more than 300 characters\");\n      setDescription(Description.slice(0, 300));\n    }\n  }, [Title, skill, Description]);\n\n  return (\n    <div>\n      <form className=\"Form\" onSubmit={HandleInputs}>\n        <div className=\"Title\">\n          <p>TeamUp Post Form</p>\n        </div>\n        <div className=\"forminput\">\n          <label>\n            Requirement<span style={{ color: \"red\" }}>*</span>\n          </label>\n          <input\n            className=\"input\"\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Looking for WEB developer\"\n            value={Title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"forminput\">\n          <label>\n            Skill<span style={{ color: \"red\" }}>*</span>\n          </label>\n          <input\n            className=\"input\"\n            type=\"text\"\n            required\n            id=\"Skill\"\n            placeholder=\"Reactjs,kotlin\"\n            value={skill}\n            onChange={(e) => setSkill(e.target.value)}\n          ></input>\n        </div>\n        {/* <Dropdown tag={Tag} func={settag} /> */}\n        <div className=\"forminput\">\n          <label>Description</label>\n          <textarea\n            rows=\"5\"\n            cols=\"50\"\n            placeholder=\"Enter teamup Description\"\n            value={Description}\n            onChange={(e) => setDescription(e.target.value)}\n          ></textarea>\n        </div>\n        <div className=\"btndiv\">\n          <button className=\"btn\" type=\"submit\" disabled={btn_disable}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Teamup_form;\n"]},"metadata":{},"sourceType":"module"}